version: '3'

services:
#  docker-mysql:
#    image: mysql/mysql-server:8.0
#    environment:
#      - MYSQL_ROOT_PASSWORD=vladprundus
#      - MYSQL_DATABASE=micro_user
#      - MYSQL_USER=root
#      - MYSQL_PASSWORD=vladprundus
#    volumes:
#      - my-datavolume:/var/lib/mysql
#    ports:
#      - 3306:3306

  eureka-container:
    image: eureka-docker
    ports:
      - "8761:8761"
    environment:
      eureka.client.serviceUrl.defaultZone: http://host.docker.internal:8761/eureka/

#  user-container:
#    image: user-docker
#    ports:
#      - "8000:8000"
#    depends_on:
##      - docker-mysql
#      - eureka-container
#    links:
#      - eureka-container
#    environment:
#      server.port: 8761
#      eureka.client.serviceUrl.defaultZone: http://host.docker.internal:8761/eureka/

#  book-container:
#    image: book-docker
#    ports:
#      - "8001:8001"
#    depends_on:
#      - docker-mysql
#      - eureka-container
#    links:
#      - eureka-container
#    environment:
#      server.port: 8761
#      eureka.client.serviceUrl.defaultZone: http://host.docker.internal:8761/eureka/

  zuul-container:
    image: zuul-docker
    ports:
      - "8765:8765"
    depends_on:
      - eureka-container
    links:
      - eureka-container
    environment:
      server.port: 8761
      eureka.client.serviceUrl.defaultZone: http://host.docker.internal:8761/eureka/

#  client:
#    build: /Users/vladprundus/Documents/soa/project/Service-Oriented-Architecture/soa-client
#    environment:
#      - REACT_APP_PORT=4000
#    expose:
#      - 4000
#    ports:
#      - "4000:4000"
#    links:
#      - zuul-container
#      - eureka-container
#      - user-container
#      - car-container
#    command: npm start

#  zookeeper:
#    image: wurstmeister/zookeeper
#    expose:
#      - "2181"
#  kafka:
#    image: wurstmeister/kafka
#    ports:
#      - "9092:9092"
#    expose:
#      - "9093"
#    environment:
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://<your public IP here>:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:SASL_PLAINTEXT
#      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
#      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
#      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
#    depends_on:
#      - zookeeper
#    volumes:
#      - ./:/etc/kafka

volumes:
  my-datavolume:
